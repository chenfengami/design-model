/**
 * 为了说明代理的意义，我们先引入一个面向对象设计的原则--单一职责原则。
 * 单一原则：就一个类而言，应该仅有一个引起它变化的原因。如果一个对象承担了多项职责，就意味着这个对象将变得巨大，
 * 引起它变化的原因可能会有多个。面向对象设计鼓励将行为分布到细粒度的对象之中，如果一个对象承担的职责过多，等于把这些
 * 职责耦合到一起，这种耦合会导致脆弱和低内聚的设计。当变化发生时，设计可能会遭到意外的破坏。
 * 纵观【6.4】程序，我们并没有改变或者增加myImage的接口，但是通过代理对象，实际上给系统添加了新的行为。这是符合开放-封闭原则的
 * 
 * 
 */ 